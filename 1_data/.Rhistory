peso_total <- sum(pnad_df$pesos)
pnad_df$peso_normalizado <- pnad_df$pesos/sum(pnad_df$pesos)
kd <- density(pnad_df$VD5008, weights = pnad_df$peso_normalizado)
View(pnad_df)
pnad_df$VD5008[is.na(pnad_df$VD5008)] <- 0
kd <- density(pnad_df$VD5008, weights = pnad_df$peso_normalizado)
plot(kd)
max(pnad_df$VD5008)
install.packages('tidyverse')
library(dplyr)
install.packages('modi')
library(modi)
weighted.quantile(pnad_df$VD5008, pnad_df$pesos, 0.99)
pnad_df <- pnad_df %>% filter(VD5008<=10900)
kd <- density(pnad_df$VD5008, weights = pnad_df$peso_normalizado)
plot(kd)
library(ggplot2)
plot(kd) + ggtitle('Densidade da Renda')
plot(kd)
title('Densidade da Renda')
title('Densidade da Renda')
plot(kd)
View(kd)
View(kd)
plot(kd, main = 'Densidade da Renda')
plot(kd, main = 'Densidade da Renda')
abline(v=1320, col="blue")
plot(kd, main = 'Densidade da Renda')
abline(v=1212, col="blue")
library(PNADcIBGE)
library(dplyr)
library(ggplot2)
pnad <- get_pnadc(year = 2022, interview = 5, defyear = 2022, defperiod = 1, deflator = T, vars = c('VD5008'))
pnad_df <- pnad$variables
pnad_df$pesos <- pnad$pweights
pnad_df$peso_normalizado <- pnad_df$pesos/sum(pnad_df$pesos)
rm(pnad)
pnad_df$VD5008[is.na(pnad_df$VD5008)] <- 0
pnad_df <- pnad_df %>% filter(VD5008<=5000)
ggplot(pnad_df, aes(x=VD5008), weight = pesos) + geom_histogram(bins=10)
ggplot(pnad_df, aes(x=VD5008), weight = pesos) + geom_histogram(bins=60)
library(xlsx)
options(scipen = 999)
rm(list=ls())
.rs.restartR()
library(tidyverse)
library(tidyverse)
df <- read_csv("D:\microdados_censo_da_educacao_superior_2022\microdados_educação_superior_2022\dados\MICRODADOS_CADASTRO_CURSOS_2022.CSV")
library(tidyverse)
df <- read_csv("D:\\microdados_censo_da_educacao_superior_2022\\microdados_educação_superior_2022\\dados\\MICRODADOS_CADASTRO_CURSOS_2022.CSV")
library(tidyverse)
df <- read_csv("D:\\microdados_censo_da_educacao_superior_2022\\microdados_educação_superior_2022\\dados\\MICRODADOS_CADASTRO_CURSOS_2022.CSV", delim=";")
View(df)
library(tidyverse)
df <- read_delim("D:\\microdados_censo_da_educacao_superior_2022\\microdados_educação_superior_2022\\dados\\MICRODADOS_CADASTRO_CURSOS_2022.CSV", delim=";")
View(df)
library(tidyverse)
df <- read_delim("D:\\microdados_censo_da_educacao_superior_2022\\microdados_educação_superior_2022\\dados\\MICRODADOS_CADASTRO_CURSOS_2022.CSV", locale = locale(encoding = "windows-1252"),delim=";")
gc()
View(df)
df$QT_MAT
sum(df$QT_MAT)
df$QT_ING
library(tidyverse)
df <- read_delim("D:\\microdados_censo_da_educacao_superior_2022\\microdados_educação_superior_2022\\dados\\MICRODADOS_CADASTRO_CURSOS_2022.CSV", locale = locale(encoding = "windows-1252"),delim=";")
agrupado <- df %>% group_by(TP_CATEGORIA_ADMINISTRATIVA) %>% summarise(total_mat = sum(QT_MAT))
View(agrupado)
df_covert <- list('TP_CATEGORIA_ADMINISTRATIVA'=c(1,2,3,4,5,6,7,8,9), 'Categoria'=c('Pública Federal','Pública Estadual','Pública Municipal','Privada com fins lucrativos','Privada sem fins lucrativos','Privada - Particular em sentido estrito','Especial','Privada comunitária','Privada confessional'))
library(tidyverse)
df <- read_delim("D:\\microdados_censo_da_educacao_superior_2022\\microdados_educação_superior_2022\\dados\\MICRODADOS_CADASTRO_CURSOS_2022.CSV", locale = locale(encoding = "windows-1252"),delim=";")
agrupado <- df %>% group_by(TP_CATEGORIA_ADMINISTRATIVA) %>% summarise(total_mat = sum(QT_MAT))
df_covert <- list('TP_CATEGORIA_ADMINISTRATIVA'=c(1,2,3,4,5,6,7,8,9), 'Categoria'=c('Pública Federal','Pública Estadual','Pública Municipal','Privada com fins lucrativos','Privada sem fins lucrativos','Privada - Particular em sentido estrito','Especial','Privada comunitária','Privada confessional'))
agrupado <- agrupado %>% left_join(df_convert, by ='TP_CATEGORIA_ADMINISTRATIVA', keep=FALSE)
library(tidyverse)
df <- read_delim("D:\\microdados_censo_da_educacao_superior_2022\\microdados_educação_superior_2022\\dados\\MICRODADOS_CADASTRO_CURSOS_2022.CSV", locale = locale(encoding = "windows-1252"),delim=";")
agrupado <- df %>% group_by(TP_CATEGORIA_ADMINISTRATIVA) %>% summarise(total_mat = sum(QT_MAT))
df_covert <- data.frame(list('TP_CATEGORIA_ADMINISTRATIVA'=c(1,2,3,4,5,6,7,8,9), 'Categoria'=c('Pública Federal','Pública Estadual','Pública Municipal','Privada com fins lucrativos','Privada sem fins lucrativos','Privada - Particular em sentido estrito','Especial','Privada comunitária','Privada confessional')))
agrupado <- agrupado %>% left_join(df_convert, by ='TP_CATEGORIA_ADMINISTRATIVA', keep=FALSE)
View(agrupado)
agrupado <- agrupado %>% left_join(df_convert, by ='TP_CATEGORIA_ADMINISTRATIVA')
agrupado <- agrupado %>% left_join(df_covert, by ='TP_CATEGORIA_ADMINISTRATIVA', keep=FALSE)
View(agrupado)
total <- sum(agrupado$total_mat)
total <- sum(agrupado$total_mat)
agrupado$relativo <- agrupado$total_mat/total
View(agrupado)
gc()
gc()
library(tidyverse)
df <- read_delim("D:\\microdados_censo_da_educacao_superior_2022\\microdados_educação_superior_2022\\dados\\MICRODADOS_CADASTRO_CURSOS_2022.CSV", locale = locale(encoding = "windows-1252"),delim=";")
agrupado <- df %>% group_by(TP_CATEGORIA_ADMINISTRATIVA) %>% summarise("Total de Matrículas" = sum(QT_MAT))
df_covert <- data.frame(list('TP_CATEGORIA_ADMINISTRATIVA'=c(1,2,3,4,5,6,7,8,9), 'Categoria'=c('Pública Federal','Pública Estadual','Pública Municipal','Privada com fins lucrativos','Privada sem fins lucrativos','Privada - Particular em sentido estrito','Especial','Privada comunitária','Privada confessional')))
agrupado <- agrupado %>% left_join(df_covert, by ='TP_CATEGORIA_ADMINISTRATIVA', keep=FALSE)
total <- sum(agrupado$total_mat)
agrupado$Porcentagem <- agrupado$total_mat/total
View(agrupado)
total <- sum(agrupado$`Total de Matrículas`)
agrupado$Porcentagem <- agrupado$`Total de Matrículas`/total
View(agrupado)
total <- sum(agrupado$`Total de Matrículas`)
agrupado$Porcentagem <- (agrupado$`Total de Matrículas`/total)*100
View(agrupado)
View(df)
agrupado <- df %>% group_by(TP_CATEGORIA_ADMINISTRATIVA) %>% summarise("Total de Ingressantes" = sum(QT_ING))
df_covert <- data.frame(list('TP_CATEGORIA_ADMINISTRATIVA'=c(1,2,3,4,5,6,7,8,9), 'Categoria'=c('Pública Federal','Pública Estadual','Pública Municipal','Privada com fins lucrativos','Privada sem fins lucrativos','Privada - Particular em sentido estrito','Especial','Privada comunitária','Privada confessional')))
agrupado <- agrupado %>% left_join(df_covert, by ='TP_CATEGORIA_ADMINISTRATIVA', keep=FALSE)
total <- sum(agrupado$`Total de Ingressantes`)
agrupado$Porcentagem <- (agrupado$`Total de Ingressantes`/total)*100
View(agrupado)
agrupado <- df %>% group_by(TP_CATEGORIA_ADMINISTRATIVA, SG_UF_IES) %>% summarise("Total de Ingressantes" = sum(QT_ING))
agrupado <- df %>% group_by(TP_CATEGORIA_ADMINISTRATIVA, SG_UF) %>% summarise("Total de Ingressantes" = sum(QT_ING))
df_covert <- data.frame(list('TP_CATEGORIA_ADMINISTRATIVA'=c(1,2,3,4,5,6,7,8,9), 'Categoria'=c('Pública Federal','Pública Estadual','Pública Municipal','Privada com fins lucrativos','Privada sem fins lucrativos','Privada - Particular em sentido estrito','Especial','Privada comunitária','Privada confessional')))
agrupado <- agrupado %>% left_join(df_covert, by ='TP_CATEGORIA_ADMINISTRATIVA', keep=FALSE)
total <- sum(agrupado$`Total de Ingressantes`)
agrupado$Porcentagem <- (agrupado$`Total de Ingressantes`/total)*100
View(agrupado)
total <- df %>% group_by(SG_UF) %>% summarise(total_estado = sum(QT_ING))
agrupado <- agrupado %>% left_join(df_covert, by ='TP_CATEGORIA_ADMINISTRATIVA', keep=FALSE)
total <- df %>% group_by(SG_UF) %>% summarise(total_estado = sum(QT_ING))
agrupado <- agrupado %>% left_join(total, by='SG_UF', keep=FALSE)
agrupado$Porcentagem <- (agrupado$`Total de Ingressantes`/agrupado$total_estado)*100
View(agrupado)
agrupado <- df %>% group_by(TP_CATEGORIA_ADMINISTRATIVA, SG_UF) %>% summarise("Total de Ingressantes" = sum(QT_ING))
df_covert <- data.frame(list('TP_CATEGORIA_ADMINISTRATIVA'=c(1,2,3,4,5,6,7,8,9), 'Categoria'=c('Pública Federal','Pública Estadual','Pública Municipal','Privada com fins lucrativos','Privada sem fins lucrativos','Privada - Particular em sentido estrito','Especial','Privada comunitária','Privada confessional')))
agrupado <- agrupado %>% left_join(df_covert, by ='TP_CATEGORIA_ADMINISTRATIVA', keep=FALSE)
total <- df %>% group_by(SG_UF) %>% summarise(total_estado = sum(QT_ING))
agrupado <- agrupado %>% left_join(total, by='SG_UF', keep=FALSE)
agrupado$Porcentagem <- (agrupado$`Total de Ingressantes`/agrupado$total_estado)*100
agrupado$Porcentagem <- (agrupado$`Total de Ingressantes`/total)*100
View(agrupado)
View(agrupado %>% filter(SG_UF=='SP'))
View(agrupado %>% filter(SG_UF=='MG'))
View(agrupado %>% filter(SG_UF=='CE'))
View(agrupado %>% filter(SG_UF=='AM'))
View(agrupado %>% filter(SG_UF=='RJ'))
View(agrupado %>% filter(SG_UF=='MG'))
View(agrupado %>% filter(SG_UF=='CE'))
View(agrupado %>% filter(SG_UF=='AM'))
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.height = 5, fig.width = 8)
# evita notação científica nos números
options(scipen=999)
gc()
library(data.table)
library(survey)
library(tidyverse)
library(ggtext)
install.packages('ggtext')
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.height = 5, fig.width = 8)
# evita notação científica nos números
options(scipen=999)
gc()
library(data.table)
library(survey)
library(tidyverse)
library(ggtext)
library(Hmisc)
# carrega dados
setwd('D:\\Saude - IPEA\\PNS')
d <- fread("../DATA/PNS/PNS2.gz")
# carrega dados
setwd('D:\\Saude - IPEA\\PNS')
d <- fread("PNS2.gz")
gc()
d$E01601
d[, RendaTrabaPrinc := sum(E01601, E01602), by =.(1:nrow(d)) ]
d %>% select(c(E01601,E01602, RendaTrabaPrinc)) %>% View()
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.height = 5, fig.width = 8)
# evita notação científica nos números
options(scipen=999)
gc()
library(data.table)
library(survey)
library(tidyverse)
library(ggtext)
library(Hmisc)
# carrega dados
setwd('D:\\Saude - IPEA\\PNS')
d <- fread("PNS2.gz")
gc()
class(d)
library(PNADcIBGE)
library(tidyverse)
# Puxando os dados da PNAD
survey_pnad <- get_pnadc(year=2024, quarter = 2)
gc()
library(PNADcIBGE)
library(tidyverse)
# Puxando os dados da PNAD
survey_pnad <- get_pnadc(year=2024, quarter = 2)
df_pnad <- survey_pnad$variables
df_pnad$peso <- survey_pnad$pweights
rm(survey_pnad)
gc()
df_pnad$V2007
mulheres <- df_pnad %>% filter(V2007=='Mulher')
mulheres <- mulheres %>% filter(!is.na(V4009))
gc()
df_informacoes_mulheres <- mulheres %>% group_by(V4013) %>%
summarise('Massa Salarial' = sum(V403312*peso), 'Mulheres Ocupadas'= sum(peso))
View(df_informacoes_mulheres)
df_informacoes_mulheres <- mulheres %>% group_by(V4013) %>%
summarise('Massa Salarial' = sum(VD4016*peso), 'Mulheres Ocupadas'= sum(peso))
View(df_informacoes_mulheres)
mulheres$VD4016
df_informacoes_mulheres <- mulheres %>% group_by(V4013) %>%
summarise('Massa Salarial' = sum(VD4020*peso), 'Mulheres Ocupadas'= sum(peso))
View(df_informacoes_mulheres)
mulheres$VD4002
df_pnad$VD4016 <- replace_na(df_pnad$VD4016,0)
mulheres <- df_pnad %>% filter(V2007=='Mulher')
mulheres <- mulheres %>% filter(VD4002=='Pessoas ocupadas')
df_informacoes_mulheres <- mulheres %>% group_by(V4013) %>%
summarise('Massa Salarial' = sum(VD4016*peso), 'Mulheres Ocupadas'= sum(peso))
View(df_informacoes_mulheres)
pessoas_ocupadas <- df_pnad %>% filter(VD4002=='Pessoas ocupadas')
pessoas_ocupadas <- df_pnad %>% filter(VD4002=='Pessoas ocupadas')
df_ocupadas <- pessoas_ocupadas %>% group_by(V4013) %>%
summarise('Massa Salarial' = sum(VD4016*peso), 'Pessoas Ocupadas'= sum(peso))
View(df_ocupadas)
homens <- pessoas_ocupadas %>% filter(V2007=='Homem')
homens <- pessoas_ocupadas %>% filter(V2007=='Homem')
df_homens <- homens  %>% group_by(V4013) %>%
summarise('Massa Salarial' = sum(VD4016*peso), 'Homens Ocupados'= sum(peso))
View(df_homens)
write.csv(df_homens, 'homens_mercado_trabalho.csv', row.names =  F)
write.csv(df_ocupadas, 'pessoas_ocupadas_mercado_trabalho.csv', row.names =  F)
write.csv(df_informacoes_mulheres, 'mulheres_mercado_trabalho.csv', row.names =  F)
getwd()
gc()
library(devtools)
install_github("bcallaway11/did")
install.packages("Rcpp")
library(devtools)
install_github("bcallaway11/did")
install_github("bcallaway11/did")
devtools::install_github("bcallaway11/did")
.libPaths()
library(devtools)
install.packages('Rcpp')
library(devtools)
devtools::install_github("bcallaway11/did")
devtools::install_github("synth-inference/synthdid",force = TRUE)
library(synthdid)
library(sensemakr)
install.packages('sensemakr')
library(synthdid)
library(sensemakr)
library(performance)
library(lindia)
install.packages("lindia")
library(synthdid)
library(sensemakr)
library(performance)
library(lindia)
library(did)
library(ggplot2)
library(tidyverse)
library(readxl)
data <- read_excel("D://Base_Envio.xlsx",
sheet = "Planilha2")
data2 <- read_excel("D://Base_Envio.xlsx",
sheet = "Planilha1")
out <- att_gt(
yname = "IPO Aftermarket Performance",
gname = "Envolvimento de Private Equity? (Bin.)",
idname = "Nome da empresa",
tname = "Tempo-pos IPO",
xformla = ~1,
data = data2,
est_method = "reg"
)
View(data2)
data2 <- data2 %>% mutate(id_company = as.numeric(as.factor("Nome da empresa")))
data2$id_company
View(data)
factor(data2$`Nome da empresa`)
as.numeric(factor(data2$`Nome da empresa`))
data2 <- data2 %>% mutate(id_company = as.numeric(factor(`Nome da empresa`)))
data_2$id_company
data2$id_company
data2 <- data2 %>% mutate(id_company = as.numeric(factor(`Nome da empresa`)))
out <- att_gt(
yname = "IPO Aftermarket Performance",
gname = "Envolvimento de Private Equity? (Bin.)",
idname = "id_company",
tname = "Tempo-pos IPO",
xformla = ~1,
data = data2,
est_method = "reg"
)
View(out)
summary(out)
out <- att_gt(
yname = "IPO Aftermarket Performance",
gname = "Envolvimento de Private Equity? (Bin.)",
idname = "id_company",
tname = "Tempo-pos IPO",
xformla = ~1,
data = data2,
allow_unbalanced_panel = TRUE,
est_method = "reg"
)
summary(out)
ggdid(out)
data(mpdta)
out1 <- att_gt(yname="lemp",
tname="year",
idname="countyreal",
gname="first.treat",
xformla=NULL,
data=mpdta)
ggdid(out1)
View(mpdta)
out2 <- att_gt(yname="lemp",
tname="year",
idname="countyreal",
gname="first.treat",
xformla=~lpop,
data=mpdta)
ggdid(out2)
summary(out2)
out3 <- att_gt(yname="lemp",
tname="year",
idname="countyreal",
gname="first.treat",
xformla=~lpop,
control_group = "notyettreated",
data=mpdta)
ggdid(out3)
install.packages("Synth")
install.packages("SCTools")
install.packages("SCtools")
library(tidyverse)
library(haven)
library(Synth)
library(devtools)
library(SCtools)
read_data <- function(df)
{
full_path <- paste("https://github.com/scunning1975/mixtape/raw/master/",
df, sep = "")
df <- read_dta(full_path)
return(df)
}
texas <- read_data("texas.dta") %>%
as.data.frame(.)
View(texas)
dataprep_out <- dataprep(
foo = texas,
predictors = c("poverty", "income"),
predictors.op = "mean",
time.predictors.prior = 1985:1993,
special.predictors = list(
list("bmprison", c(1988, 1990:1992), "mean"),
list("alcohol", 1990, "mean"),
list("aidscapita", 1990:1991, "mean"),
list("black", 1990:1992, "mean"),
list("perc1519", 1990, "mean")),
dependent = "bmprison",
unit.variable = "statefip",
unit.names.variable = "state",
time.variable = "year",
treatment.identifier = 48,
controls.identifier = c(1,2,4:6,8:13,15:42,44:47,49:51,53:56),
time.optimize.ssr = 1985:1993,
time.plot = 1985:2000
)
synth_out <- synth(data.prep.obj = dataprep_out)
path.plot(synth_out, dataprep_out)
gaps.plot(synth_out, dataprep_out)
placebos <- generate.placebos(dataprep_out, synth_out, Sigf.ipop = 3)
mspe.plot(placebos, discard.extreme = TRUE, mspe.limit = 1, plot.hist = TRUE)
getwd()
library(here)
here()
install.packages("this.path")
library(this.path)
print(this.path::this.file())
this.path()
print(this.path::this.dir())
this.dir(n1)
this.dir(n=1)
this.dir(n=2)
this.dir(n=0)
library(tidyverse)
library(this.path)
setwd(this.dir())
raisDb <- read.csv("../0_raw/municipal_public_workers_rais.csv")
transferFiles <- c("transferências_para_municípios_1999_2003.csv","transferências_para_municípios_2004_2008.csv","transferências_para_municípios_2009_2013.csv","transferências_para_municípios_2014_2018.csv","transferências_para_municípios_2019_2023.csv")
library(tidyverse)
library(this.path)
setwd(this.dir())
rawDir <- "../0_raw/"
raisDb <- read.csv(rawDir+"municipal_public_workers_rais.csv")
raisDb <- read.csv(paste0(rawDir,"municipal_public_workers_rais.csv"))
library(tidyverse)
library(this.path)
setwd(this.dir())
rawDir <- "../0_raw/"
raisDb <- read.csv(paste0(rawDir,"municipal_public_workers_rais.csv"))
transferFiles <- c("transferências_para_municípios_1999_2003.csv","transferências_para_municípios_2004_2008.csv","transferências_para_municípios_2009_2013.csv","transferências_para_municípios_2014_2018.csv","transferências_para_municípios_2019_2023.csv")
transferPaths <- file.path(rawDir, transferFiles)
transfer_df <- transferPaths %>%
lapply(read_csv) %>%
bind_rows()
transfer_df <- transferPaths %>%
lapply(function(file) read.csv(file, encoding = "UTF-8", sep = ";", colClasses = "character")) %>%
bind_rows()
file <- transferPaths[1]
read.csv(file, encoding = "UTF-8", sep = ";", colClasses = "character")
lapply(function(file) read.csv(file, encoding = "ANSI", sep = ";", colClasses = "character"))
read.csv(file, encoding = "ANSI", sep = ";", colClasses = "character")
library(readr)
text <- read_file(file, locale = locale(encoding = "Windows-1252"))
write_file(text, "your_file_utf8.csv")
read.csv(file, encoding = "Windows-1252", sep = ";", colClasses = "character")
read.csv("your_file_utf8.csv", encoding = "UTF-8", sep = ";", colClasses = "character")
utf8Paths <- file.path(tempdir(), basename(transferPaths))
for (i in seq_along(transferPaths)) {
text <- read_file(transferPaths[i], locale = locale(encoding = "Windows-1252"))
write_file(text, utf8Paths[i])  # write in UTF-8
}
transfer_df <- utf8Paths %>%
lapply(function(file) read.csv(file, encoding = "UTF-8", sep = ";", colClasses = "character")) %>%
bind_rows()
View(transfer_df)
transferDf <- transferDf %>% mutate(transfer_value = convert_to_numeric(Valor.Consolidado))
library(tidyverse)
library(this.path)
convert_to_numeric <- function(value) {
clean_value <- gsub("R\\$", "", value)
clean_value <- gsub("\\.", "", clean_value)
clean_value <- gsub(",", ".", clean_value)
return(as.double(clean_value))
}
setwd(this.dir())
rawDir <- "../0_raw/"
raisDb <- read.csv(paste0(rawDir,"municipal_public_workers_rais.csv"))
transferFiles <- c("transferências_para_municípios_1999_2003.csv","transferências_para_municípios_2004_2008.csv","transferências_para_municípios_2009_2013.csv","transferências_para_municípios_2014_2018.csv","transferências_para_municípios_2019_2023.csv")
transferPaths <- file.path(rawDir, transferFiles)
# Change original transfer files enconding using a temporary directory
utf8Paths <- file.path(tempdir(), basename(transferPaths))
for (i in seq_along(transferPaths)) {
text <- read_file(transferPaths[i], locale = locale(encoding = "Windows-1252"))
write_file(text, utf8Paths[i])  # write in UTF-8
}
transferDf <- utf8Paths %>%
lapply(function(file) read.csv(file, encoding = "UTF-8", sep = ";", colClasses = "character")) %>%
bind_rows()
# Converting the transfer value to a numeric column
transferDf <- transferDf %>% mutate(transfer_value = convert_to_numeric(Valor.Consolidado))
View(transferDf)
View(raisDb)
transferDf <- transferDf %>% rename(municipality_id = Código.IBGE)
View(transferDf)
library(tidyverse)
library(this.path)
convert_to_numeric <- function(value) {
clean_value <- gsub("R\\$", "", value)
clean_value <- gsub("\\.", "", clean_value)
clean_value <- gsub(",", ".", clean_value)
return(as.double(clean_value))
}
setwd(this.dir())
rawDir <- "../0_raw/"
raisDb <- read.csv(paste0(rawDir,"municipal_public_workers_rais.csv"))
transferFiles <- c("transferências_para_municípios_1999_2003.csv","transferências_para_municípios_2004_2008.csv","transferências_para_municípios_2009_2013.csv","transferências_para_municípios_2014_2018.csv","transferências_para_municípios_2019_2023.csv")
transferPaths <- file.path(rawDir, transferFiles)
# Change original transfer files enconding using a temporary directory
utf8Paths <- file.path(tempdir(), basename(transferPaths))
for (i in seq_along(transferPaths)) {
text <- read_file(transferPaths[i], locale = locale(encoding = "Windows-1252"))
write_file(text, utf8Paths[i])  # write in UTF-8
}
transferDf <- utf8Paths %>%
lapply(function(file) read.csv(file, encoding = "UTF-8", sep = ";", colClasses = "character")) %>%
bind_rows()
# Converting the transfer value to a numeric column
transferDf <- transferDf %>% mutate(transfer_value = convert_to_numeric(Valor.Consolidado))
transferDf <- transferDf %>% rename(municipality_id = Código.IBGE, municipality_name = Município, year = Ano, state = UF)
library(tidyverse)
library(this.path)
convert_to_numeric <- function(value) {
clean_value <- gsub("R\\$", "", value)
clean_value <- gsub("\\.", "", clean_value)
clean_value <- gsub(",", ".", clean_value)
return(as.double(clean_value))
}
setwd(this.dir())
rawDir <- "../0_raw/"
raisDb <- read.csv(paste0(rawDir,"municipal_public_workers_rais.csv"))
transferFiles <- c("transferências_para_municípios_1999_2003.csv","transferências_para_municípios_2004_2008.csv","transferências_para_municípios_2009_2013.csv","transferências_para_municípios_2014_2018.csv","transferências_para_municípios_2019_2023.csv")
transferPaths <- file.path(rawDir, transferFiles)
# Change original transfer files enconding using a temporary directory
utf8Paths <- file.path(tempdir(), basename(transferPaths))
for (i in seq_along(transferPaths)) {
text <- read_file(transferPaths[i], locale = locale(encoding = "Windows-1252"))
write_file(text, utf8Paths[i])  # write in UTF-8
}
transferDf <- utf8Paths %>%
lapply(function(file) read.csv(file, encoding = "UTF-8", sep = ";", colClasses = "character")) %>%
bind_rows()
# Converting the transfer value to a numeric column
transferDf <- transferDf %>% mutate(transfer_value = convert_to_numeric(Valor.Consolidado))
transferDf <- transferDf %>% rename(municipality_id = Código.IBGE, municipality_name = Município, year = Ano, state = UF)
transferDf <- transferDf %>% select(c(municipality_id, municipality_name, year, state, transfer_value))
View(transferDf)
utf8path <- paste0(tempdir(), "population1998_2023.csv")
text <- read_file(paste0(rawDir, "population1998_2023.csv"), locale = locale(encoding = "Windows-1252"))
write_file(text, utf8path)
populationDf <- read.csv(utf8path, encoding = "UTF-8", sep = ";", skip = 3, header = T)
View(populationDf)
